let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <S-Tab> <Plug>SuperTabBackward
inoremap <silent> <C-Tab> =UltiSnips#ListSnippets()
inoremap <Plug>(emmet-anchorize-summary) =emmet#util#closePopup()=emmet#anchorizeURL(1)
inoremap <Plug>(emmet-anchorize-url) =emmet#util#closePopup()=emmet#anchorizeURL(0)
inoremap <Plug>(emmet-remove-tag) =emmet#util#closePopup()=emmet#removeTag()
inoremap <Plug>(emmet-split-join-tag) :call emmet#splitJoinTag()
inoremap <Plug>(emmet-toggle-comment) =emmet#util#closePopup()=emmet#toggleComment()
inoremap <Plug>(emmet-image-size) =emmet#util#closePopup()=emmet#imageSize()
inoremap <Plug>(emmet-move-prev-item) :call emmet#moveNextPrevItem(1)
inoremap <Plug>(emmet-move-next-item) :call emmet#moveNextPrevItem(0)
inoremap <Plug>(emmet-move-prev) :call emmet#moveNextPrev(1)
inoremap <Plug>(emmet-move-next) :call emmet#moveNextPrev(0)
inoremap <Plug>(emmet-balance-tag-outword) :call emmet#balanceTag(-1)
inoremap <Plug>(emmet-balance-tag-inward) :call emmet#balanceTag(1)
inoremap <Plug>(emmet-update-tag) =emmet#util#closePopup()=emmet#updateTag()
inoremap <Plug>(emmet-expand-word) =emmet#util#closePopup()=emmet#expandAbbr(1,"")
inoremap <Plug>(emmet-expand-abbr) =emmet#util#closePopup()=emmet#expandAbbr(0,"")
inoremap <silent> <expr> <Plug>delimitMateS-BS delimitMate#WithinEmptyPair() ? "\<Del>" : "\<S-BS>"
inoremap <silent> <Plug>delimitMateBS =delimitMate#BS()
vmap  "+y
snoremap <silent>  c
nmap  
xmap 	 >gv
nmap 	 :b#
xnoremap <NL> :m '>+1gv=gv
nnoremap <NL> :m .+1==
vnoremap  :m '<-2gv=gv
nnoremap  :m .-2==
nmap  
xnoremap <silent>  :call multiple_cursors#new("v", 0)
nnoremap <silent>  :call multiple_cursors#new("n", 1)
map  <Plug>(ctrlp)
nmap  :bdelete
snoremap  "_c
vmap  :wgv
nmap  :w
nnoremap E :SyntasticCheck :SyntasticToggleMode
vmap  "+x
noremap ,sr :call PhpSortUse()
noremap ,exp :call PhpExpandClass()
noremap ,use :call PhpInsertUse()
nmap <silent> ,w,y <Plug>VimwikiMakeYesterdayDiaryNote
nmap <silent> ,w,t <Plug>VimwikiTabMakeDiaryNote
nmap <silent> ,w,w <Plug>VimwikiMakeDiaryNote
nmap <silent> ,w,i <Plug>VimwikiDiaryGenerateLinks
nmap <silent> ,wi <Plug>VimwikiDiaryIndex
nmap <silent> ,ws <Plug>VimwikiUISelect
nmap <silent> ,wt <Plug>VimwikiTabIndex
nmap <silent> ,ww <Plug>VimwikiIndex
nnoremap <silent> ,pcf :call PhpCsFixerFixFile()
nnoremap <silent> ,pcd :call PhpCsFixerFixDirectory()
nmap <silent> ,ig <Plug>IndentGuidesToggle
nmap ,hp <Plug>GitGutterPreviewHunk
nmap ,hr <Plug>GitGutterUndoHunk:echomsg ',hr is deprecated. Use ,hu'
nmap ,hu <Plug>GitGutterUndoHunk
nmap ,hs <Plug>GitGutterStageHunk
nmap ,lra :e routes/api.php
nmap ,lrw :e routes/web.php
nmap ,lesp :e app/Providers/EventServiceProvider.php
nmap ,lev :e .env
nnoremap ,doc :call pdv#DocumentCurrentLine()v/\*\/:s/${.*://V?\*\*:s/} */ /V?\*\*:s/${.* //
nnoremap <silent> ,fX :call PhpCsFixerFixDirectory()
nnoremap <silent> ,fx :call PhpCsFixerFixFile()
nmap ,r :CtrlPBufTag
nnoremap ,  :noh                           
nmap ,nf :NERDTreeFindzz
nmap ,n :NERDTreeToggle
nmap ,v :vertical resize -10
nmap ,b :vertical resize +10
nnoremap ,W :bn
xnoremap ,W :bn
onoremap ,W :bn
nnoremap ,w :bn
xnoremap ,w :bn
onoremap ,w :bn
nnoremap ,q :bp
xnoremap ,q :bp
onoremap ,q :bp
nmap ,s :source ~/.vimrc:AirlineRefresh
xmap ,s :source ~/.vimrc:AirlineRefresh
omap ,s :source ~/.vimrc:AirlineRefresh
nmap ,cft :set ft=
xmap ,cft :set ft=
omap ,cft :set ft=
nmap ,gdd :!git diff
nmap ,gcom :Gcommit
nmap ,gad :Gwrite
nmap ,gst :Gstatus
nmap ,es :e ~/dotfiles/vim/UltiSnips/
nmap ,ev :e ~/dotfiles/vim/vimrc
nmap ,term :e ~/dotfiles/termite/config
nmap ,zsh :e ~/dotfiles/zsh/zshrc
nmap ,i3 :e ~/dotfiles/i3/config
nmap ,dot :e ~/dotfiles/README.md            
nmap [c <Plug>GitGutterPrevHunk
nmap ]c <Plug>GitGutterNextHunk
xmap ac <Plug>GitGutterTextObjectOuterVisual
omap ac <Plug>GitGutterTextObjectOuterPending
xmap gx <Plug>NetrwBrowseXVis
nmap gx <Plug>NetrwBrowseX
xmap ic <Plug>GitGutterTextObjectInnerVisual
omap ic <Plug>GitGutterTextObjectInnerPending
nnoremap <silent> <Plug>(multiple-cursors-new-word) :call multiple_cursors#new('v', 1)
nnoremap <silent> <Plug>(multiple-cursors-new) :call multiple_cursors#new('v', 0)
nnoremap <silent> <Plug>(multiple-cursors-skip) :call multiple_cursors#skip()
nnoremap <silent> <Plug>(multiple-cursors-prev) :call multiple_cursors#prev()
vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())
nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk
nnoremap <silent> <Plug>GitGutterUndoHunk :GitGutterUndoHunk
nnoremap <silent> <Plug>GitGutterStageHunk :GitGutterStageHunk
nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\execute v:count1 . 'GitGutterPrevHunk'\"
nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\execute v:count1 . 'GitGutterNextHunk'\"
xnoremap <silent> <Plug>GitGutterTextObjectOuterVisual :call gitgutter#hunk#text_object(0)
xnoremap <silent> <Plug>GitGutterTextObjectInnerVisual :call gitgutter#hunk#text_object(1)
onoremap <silent> <Plug>GitGutterTextObjectOuterPending :call gitgutter#hunk#text_object(0)
onoremap <silent> <Plug>GitGutterTextObjectInnerPending :call gitgutter#hunk#text_object(1)
nnoremap <SNR>64_: :=v:count ? v:count : ''
snoremap <silent> <Del> c
snoremap <silent> <BS> c
snoremap <silent> <C-Tab> :call UltiSnips#ListSnippets()
nnoremap <silent> <Plug>(ctrlp) :CtrlP
vmap <S-Tab> <gv
imap  ,
inoremap <silent> 	 =UltiSnips#ExpandSnippet()
inoremap <NL> :m .+1==gi
inoremap  :m .-2==gi
imap  :wa
cnoremap  +
imap A <Plug>(emmet-anchorize-summary)
imap a <Plug>(emmet-anchorize-url)
imap k <Plug>(emmet-remove-tag)
imap j <Plug>(emmet-split-join-tag)
imap / <Plug>(emmet-toggle-comment)
imap i <Plug>(emmet-image-size)
imap N <Plug>(emmet-move-prev)
imap n <Plug>(emmet-move-next)
imap D <Plug>(emmet-balance-tag-outword)
imap d <Plug>(emmet-balance-tag-inward)
imap u <Plug>(emmet-update-tag)
imap ; <Plug>(emmet-expand-word)
imap , <Plug>(emmet-expand-abbr)
inoremap ,sr :call PhpSortUse()
inoremap ,exp :call IPhpExpandClass()
inoremap ,use :call IPhpInsertUse()
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set autoread
set backspace=indent,eol,start
set balloonexpr=SyntasticBalloonsExprNotifier()
set clipboard=unnamedplus
set directory=~/.vim_tmp/swap
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set foldlevelstart=1
set formatlistpat=^\\s*\\%(\\(#\\|\\*\\|-\\)\\|\\(\\C\\%(\\d\\+)\\|\\d\\+\\.\\|[ivxlcdm]\\+)\\|[IVXLCDM]\\+)\\|\\l\\{1,2})\\|\\u\\{1,2})\\)\\)\\)\\s\\+\\%(\\[\\([\ .oOX-]\\)\\]\\s\\)\\?
set gdefault
set guifont=FuraMono\ Nerd\ Font\ Medium\ 12
set helplang=en
set hidden
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set linespace=9
set printoptions=paper:a4
set ruler
set runtimepath=~/.vim,~/.vim/bundle/ctrlp.vim,~/.vim/bundle/delimitmate,~/.vim/bundle/emmet-vim,~/.vim/bundle/nerdtree,~/.vim/bundle/pdv,~/.vim/bundle/supertab,~/.vim/bundle/syntastic,~/.vim/bundle/ultisnips,~/.vim/bundle/vim-airline,~/.vim/bundle/vim-airline-themes,~/.vim/bundle/vim-blade,~/.vim/bundle/vim-devicons,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-gitgutter,~/.vim/bundle/vim-indent-guides,~/.vim/bundle/vim-multiple-cursors,~/.vim/bundle/vim-pathogen,~/.vim/bundle/vim-php-cs-fixer,~/.vim/bundle/vim-php-namespace,~/.vim/bundle/vim-sintax-highlight,~/.vim/bundle/vim-snippets,~/.vim/bundle/vim-wakatime,~/.vim/bundle/vimwiki,~/.vim/bundle/vmustache,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim80,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/bundle/vim-sintax-highlight/after,~/.vim/bundle/ultisnips/after,~/.vim/after
set shiftwidth=4
set showmatch
set showtabline=2
set smartcase
set smartindent
set softtabstop=4
set statusline=%#warningmsg#%{SyntasticStatuslineFlag()}%*%#warningmsg#%{SyntasticStatuslineFlag()}%*
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabline=%!airline#extensions#tabline#get()
set wildignore=*/vendor/*,*/public/*,*/node_modules/*,*.swp,*.zip
set window=32
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/projetos/seus-direitos-webapi
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +53 app/Models/Convencao.php
badd +72 resources/views/layouts/menu.blade.php
badd +15 database/migrations/2018_12_02_170052_troca_fk_convencoes.php
badd +36 database/migrations/2018_04_21_154554_create_convencaos_table.php
badd +18 database/migrations/2018_09_09_190328_cria_fk_usuarios.php
badd +19 resources/views/convencaos/fields.blade.php
badd +15 app/Http/Controllers/ConvencaoController.php
badd +39 app/Models/Instituicao.php
badd +45 app/Models/Categoria.php
badd +20 ~/vimwiki/diary/2018-12-02.wiki
badd +55 app/Models/Noticias.php
badd +20 app/DataTables/NoticiasDataTable.php
badd +56 app/Models/User.php
badd +4 app/DataTables/Scopes/PorSindicato.php
badd +10 app/Http/Controllers/InstituicaoController.php
badd +19 database/migrations/2018_12_02_180746_adiciona_fk_sindicato_instituicoes.php
badd +135 app/Models/Sindicato.php
badd +16 resources/views/instituicaos/fields.blade.php
badd +38 resources/views/users/fields.blade.php
badd +32 app/Repositories/SindicatoRepository.php
badd +3 resources/views/users/create-funcionario.blade.php
badd +8 resources/views/instituicaos/create.blade.php
badd +1 ~/vimwiki/diary/-.wiki
badd +3 resources/views/sindicatos/edit.blade.php
badd +3 resources/views/instituicaos/edit.blade.php
badd +36 app/Http/Controllers/API/VideoAPIController.php
badd +55 app/Models/Video.php
badd +55 app/Models/Propaganda.php
badd +5 resources/views/propagandas/fields.blade.php
badd +64 app/DataTables/PropagandaDataTable.php
badd +49 app/Http/Controllers/API/HomeAPIController.php
badd +39 app/DataTables/Scopes/PorSindicatoDaInstituicao.php
badd +83 routes/web.php
badd +62 resources/views/carteirinha/index.blade.php
badd +1 resources/assets/sass/carteirinha.scss
argglobal
silent! argdel *
edit resources/assets/sass/carteirinha.scss
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer>  <Plug>delimitMateBS
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://
setlocal commentstring=//\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=^\\s*\\%(@mixin\\|=\\)
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'scss'
setlocal filetype=scss
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=1
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\%(\\(#\\|\\*\\|-\\)\\|\\(\\C\\%(\\d\\+)\\|\\d\\+\\.\\|[ivxlcdm]\\+)\\|[IVXLCDM]\\+)\\|\\l\\{1,2})\\|\\u\\{1,2})\\)\\)\\)\\s\\+\\%(\\[\\([\ .oOX-]\\)\\]\\s\\)\\?
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*@import\\s\\+\\%(url(\\)\\=[\"']\\=
setlocal includeexpr=substitute(v:fname,'\\%(.*/\\|^\\)\\zs','_','')
setlocal indentexpr=GetCSSIndent()
setlocal indentkeys=0{,0},!^F,o,O
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
setlocal nonumber
set numberwidth=2
setlocal numberwidth=2
setlocal omnifunc=csscomplete#CompleteCSS
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal signcolumn=auto
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(1)
setlocal suffixesadd=.sass,.scss,.css
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'scss'
setlocal syntax=scss
endif
setlocal tabstop=8
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal winfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 65 - ((14 * winheight(0) + 15) / 30)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
65
normal! 05|
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
